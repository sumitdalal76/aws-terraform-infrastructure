import os
import json
import subprocess
from rich.console import Console
from rich.table import Table

# Initialize console for better terminal output
console = Console()

def run_aws_list_all():
    """
    Run the aws-list-all command to scan only S3 resources.
    """
    output_dir = "aws_list_all_output"

    # Create output directory if it doesn't exist
    os.makedirs(output_dir, exist_ok=True)

    console.print("[bold cyan]Running aws-list-all for S3 buckets...[/bold cyan]")

    try:
        subprocess.run(
            [
                "aws-list-all",
                "query",
                "--service", "s3",
                "--operation", "ListBuckets",
                "--directory", output_dir
            ],
            check=True
        )
    except subprocess.CalledProcessError as e:
        console.print(f"[bold red]Error running aws-list-all: {e}[/bold red]")
        raise

    return output_dir

def parse_and_display(output_dir):
    """
    Parse the JSON files generated by aws-list-all and display the results in a table.
    """
    all_resources = []

    for root, _, files in os.walk(output_dir):
        for file in files:
            if file.endswith(".json"):
                file_path = os.path.join(root, file)
                with open(file_path, "r") as f:
                    try:
                        # Parse JSON data
                        data = json.load(f)
                        service = data.get("Service", "Unknown")
                        operation = data.get("Operation", "Unknown")

                        # Look for resource data
                        resources = data.get("Resources", [])
                        for resource in resources:
                            all_resources.append({
                                "Service": service,
                                "Operation": operation,
                                "Resource": json.dumps(resource, indent=2),
                            })
                    except json.JSONDecodeError:
                        console.print(f"[bold red]Error parsing JSON file: {file_path}[/bold red]")

    if all_resources:
        print_resources_table(all_resources)
        save_to_json(all_resources, "aws_s3_resources_summary.json")
    else:
        console.print("[bold yellow]No resources found for S3.[/bold yellow]")

def print_resources_table(resources):
    """
    Print the resources in a table format.
    """
    table = Table(title="AWS S3 Resources")
    table.add_column("Service", style="cyan", no_wrap=True)
    table.add_column("Operation", style="green")
    table.add_column("Resource", style="magenta")

    for resource in resources:
        table.add_row(
            resource["Service"],
            resource["Operation"],
            resource["Resource"]
        )

    console.print(table)

def save_to_json(data, filename):
    """
    Save the resource data to a JSON file.
    """
    with open(filename, "w") as f:
        json.dump(data, f, indent=4)
    console.print(f"[bold green]Resource data saved to {filename}[/bold green]")

if __name__ == "__main__":
    output_dir = run_aws_list_all()
    parse_and_display(output_dir)
