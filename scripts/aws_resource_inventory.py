#!/usr/bin/env python3
import subprocess
import os
import json
from rich.console import Console
from rich.table import Table

# Initialize console for output
console = Console()

def run_aws_list_all():
    """
    Run the aws-list-all command to query all resources across services and regions.
    """
    output_dir = "aws_list_all_output"
    os.makedirs(output_dir, exist_ok=True)

    try:
        console.print("[bold cyan]Running aws-list-all to scan all AWS resources...[/bold cyan]")

        # Run aws-list-all with default options
        subprocess.run(
            ["aws-list-all", "query", "--directory", output_dir, "--verbose"],
            check=True
        )

        console.print(f"[bold green]Resource data saved to directory: {output_dir}[/bold green]")
        return output_dir

    except subprocess.CalledProcessError as e:
        console.print(f"[bold red]Error running aws-list-all: {e}[/bold red]")
        return None

def parse_and_display(output_dir):
    """
    Parse the JSON files generated by aws-list-all and display the results in a table.
    """
    all_resources = []

    for root, _, files in os.walk(output_dir):
        for file in files:
            if file.endswith(".json"):
                file_path = os.path.join(root, file)
                with open(file_path, "r") as f:
                    try:
                        data = json.load(f)
                        for item in data.get("Resources", []):
                            all_resources.append({
                                "Region": data.get("Region"),
                                "Service": data.get("Service"),
                                "Operation": data.get("Operation"),
                                "Resource": item,
                            })
                    except json.JSONDecodeError:
                        console.print(f"[bold red]Error parsing JSON file: {file_path}[/bold red]")

    if all_resources:
        print_resources_table(all_resources)
        save_to_json(all_resources, "aws_resources_summary.json")
    else:
        console.print("[bold yellow]No resources found in the scanned regions and services.[/bold yellow]")

def print_resources_table(resources):
    """
    Print resources in a consolidated table format.
    """
    table = Table(title="AWS Resources")
    table.add_column("Region")
    table.add_column("Service")
    table.add_column("Operation")
    table.add_column("Resource")

    for res in resources:
        table.add_row(
            res["Region"],
            res["Service"],
            res["Operation"],
            json.dumps(res["Resource"], indent=2)
        )

    console.print(table)

def save_to_json(data, filename):
    """
    Save data to a JSON file.
    """
    with open(filename, "w") as f:
        json.dump(data, f, indent=4)
    console.print(f"[bold green]Resources summary saved to {filename}[/bold green]")

if __name__ == "__main__":
    output_dir = run_aws_list_all()
    if output_dir:
        parse_and_display(output_dir)
