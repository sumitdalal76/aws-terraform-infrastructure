name: 'Terraform Destroy'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy (type "prod" to confirm)'
        required: true
        type: string
      confirm_destroy:
        description: 'Are you sure you want to destroy? (type "yes-destroy-prod")'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  destroy-plan:
    if: inputs.environment == 'prod' && inputs.confirm_destroy == 'yes-destroy-prod'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: terraform/environments/prod

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::772102554033:role/github-terraform-role
          aws-region: ca-central-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan Destroy
        id: plan
        run: terraform plan -destroy -no-color

      - name: Wait for Manual Verification
        run: |
          echo "‚ö†Ô∏è DESTRUCTION PLANNED ‚ö†Ô∏è"
          echo "Review the plan above carefully!"
          echo "To proceed with destruction, manually trigger the destroy-apply job"

  destroy-apply:
    needs: destroy-plan
    runs-on: ubuntu-latest
    environment: production  # Requires manual approval
    
    defaults:
      run:
        working-directory: terraform/environments/prod

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::772102554033:role/github-terraform-role
          aws-region: ca-central-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        run: terraform init

      - name: Final Destroy Confirmation
        run: |
          echo "üö® FINAL WARNING üö®"
          echo "This will DESTROY all resources in PRODUCTION!"
          echo "Type 'yes' to confirm:"
          read -p "Confirm destruction: " confirm
          if [ "$confirm" != "yes" ]; then
            echo "Destruction cancelled"
            exit 1
          fi

      - name: Terraform Destroy
        run: terraform destroy